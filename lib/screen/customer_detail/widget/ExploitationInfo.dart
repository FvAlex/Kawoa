import 'dart:convert';
import 'dart:math';

import 'package:firebase_database/firebase_database.dart';
import 'package:flutter/material.dart';
import 'package:projet/modal/Customer.dart';
import 'package:projet/screen/customer_detail/widget/ChampInfo.dart';

import '../../../modal/Exploitation.dart';

class ExploitationInfo extends StatefulWidget {
  final id_joueur;

  ExploitationInfo({Key? key, required this.id_joueur}) : super(key: key);

  @override
  State<ExploitationInfo> createState() => _ExploitationInfoState();
}

class _ExploitationInfoState extends State<ExploitationInfo> {
  @override
  initState() {
    super.initState();
    getDataFromFirebaseToExploitation();
  }

  Future<List<Exploitation>> getDataFromFirebaseToExploitation() async {
    var response = await FirebaseDatabase.instance
        .ref()
        .child("/joueur/${widget.id_joueur}/exploitation/")
        .get();
    var decode = jsonEncode(response.value);
    List<Exploitation> result = List<Exploitation>.from(json
        .decode(decode)
        .map((exploitation) => Exploitation.fromJson(exploitation)));
    return result;
  }

  @override
  /*Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Exploitation"),
      ),
      body: ListView(
        padding: const EdgeInsets.all(8),
        children: myList.map((e) =>
            Column(
              children: [
                Card(
                  child:
                  ListTile(

                    title: Text('Joueur - ${e.id}'),
                    subtitle: Text(e.nom),
                    /*onTap: () {
                      Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => ChampInfo())
                      );
                    },*/
                  ),
                )
              ],
            )).toList(),
      ),
    );
    */
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Exploitation"),
      ),
      body: FutureBuilder(
          future: getDataFromFirebaseToExploitation(),
          builder: (context, AsyncSnapshot snapshot) {
            if (snapshot.hasData) {
              List<Exploitation> exploitations = snapshot.data;
              return ListView.builder(
                itemCount: exploitations.length,
                itemBuilder: (context, index) {
                  Exploitation exploitation = exploitations[index];
                  return Card(
                    child: ListTile(
                      title: Text(
                          'Joueur - ${widget.id_joueur} | Exploitation - ${exploitation.id}'),
                      subtitle: Text(exploitation.nom),
                      onTap: () {
                        Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (context) => ChampInfo(
                                    id_joueur: widget.id_joueur,
                                    id_exploitation: exploitation.id)));
                      },
                    ),
                  );
                },
              );
            } else if (snapshot.hasError) {
              return Text('Error: ${snapshot.error}');
            } else {
              return CircularProgressIndicator();
            }
          }),
    );
  }
}
